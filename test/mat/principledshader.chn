
{
    channel specular_tint {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"metallic\")+(1-ch(\"metallic\"))*ch(\"reflecttint\") }
    }
    channel baseBump_useTexture {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = "ch(\"baseBumpAndNormal_enable\") && strcmp(chs(\"baseBumpAndNormal_type\"), \"bump\") == 0" }
    }
    channel baseNormal_useTexture {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = "ch(\"baseBumpAndNormal_enable\") && strcmp(chs(\"baseBumpAndNormal_type\"), \"normal\") == 0" }
    }
    channel shop_disable_displace_shader {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = "!ch(\"dispInput_enable\") && !ch(\"dispTex_enable\") && !ch(\"dispNoise_enable\")" }
    }
    channel vm_displacebound {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = "1.01*ch(\"dispInput_enable\")*ch(\"dispInput_max\") + ch(\"dispTex_enable\")*max(abs((1.0+ch(\"dispTex_offset\"))*ch(\"dispTex_scale\")), abs(ch(\"dispTex_offset\")*ch(\"dispTex_scale\"))) + ch(\"dispNoise_enable\")*abs(ch(\"dispNoise_amp\"))" }
    }
    channel speccolorr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"basecolorr\") }
    }
    channel speccolorg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"basecolorg\") }
    }
    channel speccolorb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"basecolorb\") }
    }
  }

